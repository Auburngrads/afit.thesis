library(knitr)
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
library(devtools)
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown")
results <- data.frame("Case" = c("BRS, 20 YOS", "Legacy, 20 YOS", "BRS, 10 YOS"),
"TSP.Balance" = c(2894743.99, 1790488.09, 1376917.61),
"Monthly.Pension" = c(99851.94, 124814.93, 0),
"401.Balance" = c(1358503.00, 1358503.00, 3321616.00),
"Savings.Acct.Balance" = c(989679.82, 1038644.60, 1052623.19))
knitr::kable(results)
results <- data.frame("Case" = c("BRS, 20 YOS", "Legacy, 20 YOS", "BRS, 10 YOS"),
"TSP.Balance" = c(2894743.99, 1790488.09, 1376917.61),
"Monthly.Pension" = c(99851.94, 124814.93, 0),
"Balance.401.k" = c(1358503.00, 1358503.00, 3321616.00),
"Savings.Acct.Balance" = c(989679.82, 1038644.60, 1052623.19))
knitr::kable(results)
yes <- list(rep(1, 66))
no <- list(rep(0, 49))
x <- c(yes, no)
tinterval(x)
?tinterval
??tinterval
library(TIDYVERSE)
library(tidyverse)
?tinterval
?t.test
t.test(x)
t.test(as.numeric(x))
x
x <- c(rep(1,66), rep(0, 49))
t.test(x)
66/115
49/115
a<-66/115
b<-49/115
?sqt
?sqrt
a-1.96*sqrt(a*b / 115)
a+1.96*sqrt(a*b / 115)
library(tidyverse)
getwd()
read_xlsx("C:/Users/Jake Elliott/Desktop/test.xlsx")
?read.xlsx
?read.xls
??read.xls
library(readxl)
read_xlsx("C:/Users/Jake Elliott/Desktop/test.xlsx")
read_xlsx()
?read_xlsx()
read_xlsx("C:/Users/Jake Elliott/Desktop/test.xlsx", sheet = "Sheet1")
df <- read_xlsx("C:/Users/Jake Elliott/Desktop/test.xlsx", sheet = "Sheet1", col_names = FALSE)
View(df)
df[,'X_3'] %in% df[,"X__1"]
df[,'X__3'] %in% df[,"X__1"]
df[,'X__3']
df[,"X__1"]
df[,'X__3'] %in% df[,"X__1"]
df[,'X__1'] %in% df[,"X__3"]
x <- c(1, 2, 3, 4, 5, 6, 7)
y <- c(2, 6)
x %in% y
df$X__1 %in% df$X__3
source('C:/Users/Jake Elliott/Desktop/afit.thesis/thesis-code.R', echo=TRUE)
top.models.2
top.models.1
xreg.train <- cbind(UR.lag.train[,"lag24"],
LFPR.lag.train[,"lag18"])
xreg.val <- cbind(UR.lag.val[,"lag24"],
LFPR.lag.val[,"lag18"])
dyn.reg.4 <- auto.arima(train.ts.3,
xreg = xreg.train,
stepwise = FALSE,
approximation = FALSE)
dyn.reg.4
dyn.reg.3
broom::tidy(dyn.reg.4)
broom::tidy(dyn.reg.3)
broom::tidy(dyn.reg.2)
broom::tidy(dyn.reg.1)
broom::tidy(dyn.reg.1.f)
dyn.reg.1.f
broom::tidy(accuracy(dyn.reg.1.f,val.ts.3))
dyn.reg.1$aicc
top.models.1
top.models.2
inner_join(best.by.AICc.2, best.by.trainingRMSE.2)
checkresiduals(dyn.reg.3)
checkresiduals(dyn.reg.4)
Nonfarm.Quits.lag <- cbind(
lag0 = econ.vars.d[,"Nonfarm.Quits.Adj"],
lag6 = stats::lag(econ.vars.d[,"Nonfarm.Quits.Adj"], -6),
lag12 = stats::lag(econ.vars.d[,"Nonfarm.Quits.Adj"], -12),
lag18 = stats::lag(econ.vars.d[,"Nonfarm.Quits.Adj"], -18),
lag24 = stats::lag(econ.vars.d[,"Nonfarm.Quits.Adj"], -24)
)
head(econ.vars.d)
cbind(econ.vars.d, diff(df.ts.1[,"Nonfarm.Quits.Adj"]))
head(econ.vars.d)
econ.vars.d <- cbind(econ.vars.d, diff(df.ts.1[,"Nonfarm.Quits.Adj"]))
head(econ.vars.d)
econ.vars.d <- diff(df.ts.1[,econ.vars])
head(econ.vars.d)
econ.vars <- which(names(df) %in% c("Labor.Force.Participation",
"Unemployment.Rate.Adj",
"Labor.Market.Momentum",
"Nonfarm.Quits.Adj",
"CPI.Adj"))
econ.vars.2 <- which(names(df) %in% c("Labor.Force.Participation",
"Unemployment.Rate.Adj",
"Labor.Market.Momentum",
"Nonfarm.Quits.Adj",
"CPI.Adj"))
econ.vars.2.d <- diff(df.ts.1[,econ.vars])
head(econ.vars.2.d)
autoplot(econ.vars.2.d[,c("CPI.Adj", "Nonfarm.Quits.Adj")], facets = TRUE)
nsdiffs(df.ts.1[,"CPI.Adj"])
nsdiffs(econ.vars.2.d[,"CPI.Adj"])
econ.vars.2.d <- diff(df.ts.1[,econ.vars.2])
head(econ.vars.2.d)
Nonfarm.Quits.lag <- cbind(
lag0 = econ.vars.2.d[,"Nonfarm.Quits.Adj"],
lag6 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -6),
lag12 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -12),
lag18 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -18),
lag24 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -24)
)
Nonfarm.Quits.lag
Nonfarm.Quits.lag.train <- subset(Nonfarm.Quits.lag, end = set.split)
Nonfarm.Quits.lag.val <- subset(Nonfarm.Quits.lag, start = set.split+1,
end = dim(econ.vars.2.d)[1])
lag.results.3 <- tibble("Nonfarm.lag" = rep(NA, 25),
"LFPR.lag" = rep(NA, 25),
"AICc" = rep(NA, 25),
"Training.RMSE" = rep(NA, 25),
"Validation.RMSE" = rep(NA, 25))
m <- 1
for(i in c(1:5)){
for(j in c(1:5)){
xreg.train <- cbind(Nonfarm.Quits.lag.train[,i],
LFPR.lag.train[,j])
xreg.val <- cbind(Nonfarm.Quits.lag.val[,i],
LFPR.lag.val[,j])
dyn.model <- auto.arima(train.ts.3,
xreg = xreg.train,
stepwise = FALSE,
approximation = FALSE,
parallel = TRUE)
dyn.model.f <- forecast(dyn.model, xreg = xreg.val, h = 20)
dyn.model.err <- accuracy(dyn.model.f, val.ts.3)
lag.results.2[m, "Nonfarm.Quits.lag"] <- colnames(Nonfarm.Quits.lag.train)[i]
lag.results.2[m, "LFPR.lag"] <- colnames(LFPR.lag.train)[j]
lag.results.2[m, "AICc"] <- dyn.model$aicc
lag.results.2[m, "Training.RMSE"] <- dyn.model.err[1,2]
lag.results.2[m, "Validation.RMSE"] <- dyn.model.err[2,2]
m <- m + 1
}
}
lag.results.2 <- readRDS("lagResults2.rds")
m <- 1
for(i in c(1:5)){
for(j in c(1:5)){
xreg.train <- cbind(Nonfarm.Quits.lag.train[,i],
LFPR.lag.train[,j])
xreg.val <- cbind(Nonfarm.Quits.lag.val[,i],
LFPR.lag.val[,j])
dyn.model <- auto.arima(train.ts.3,
xreg = xreg.train,
stepwise = FALSE,
approximation = FALSE,
parallel = TRUE)
dyn.model.f <- forecast(dyn.model, xreg = xreg.val, h = 20)
dyn.model.err <- accuracy(dyn.model.f, val.ts.3)
lag.results.3[m, "Nonfarm.Quits.lag"] <- colnames(Nonfarm.Quits.lag.train)[i]
lag.results.3[m, "LFPR.lag"] <- colnames(LFPR.lag.train)[j]
lag.results.3[m, "AICc"] <- dyn.model$aicc
lag.results.3[m, "Training.RMSE"] <- dyn.model.err[1,2]
lag.results.3[m, "Validation.RMSE"] <- dyn.model.err[2,2]
m <- m + 1
}
}
lag.results.3 <- tibble("Quits.lag" = rep(NA, 25),
"LFPR.lag" = rep(NA, 25),
"AICc" = rep(NA, 25),
"Training.RMSE" = rep(NA, 25),
"Validation.RMSE" = rep(NA, 25))
Quits.lag <- cbind(
lag0 = econ.vars.2.d[,"Nonfarm.Quits.Adj"],
lag6 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -6),
lag12 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -12),
lag18 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -18),
lag24 = stats::lag(econ.vars.2.d[,"Nonfarm.Quits.Adj"], -24)
)
Quits.lag.train <- subset(Nonfarm.Quits.lag, end = set.split)
Quits.lag.val <- subset(Nonfarm.Quits.lag, start = set.split+1,
end = dim(econ.vars.2.d)[1])
lag.results.3 <- tibble("Quits.lag" = rep(NA, 25),
"LFPR.lag" = rep(NA, 25),
"AICc" = rep(NA, 25),
"Training.RMSE" = rep(NA, 25),
"Validation.RMSE" = rep(NA, 25))
head(lag.results.3)
m <- 1
for(i in c(1:5)){
for(j in c(1:5)){
xreg.train <- cbind(Quits.lag.train[,i],
LFPR.lag.train[,j])
xreg.val <- cbind(Quits.lag.val[,i],
LFPR.lag.val[,j])
dyn.model <- auto.arima(train.ts.3,
xreg = xreg.train,
stepwise = FALSE,
approximation = FALSE,
parallel = TRUE)
dyn.model.f <- forecast(dyn.model, xreg = xreg.val, h = 20)
dyn.model.err <- accuracy(dyn.model.f, val.ts.3)
lag.results.3[m, "Quits.lag"] <- colnames(Quits.lag.train)[i]
lag.results.3[m, "LFPR.lag"] <- colnames(LFPR.lag.train)[j]
lag.results.3[m, "AICc"] <- dyn.model$aicc
lag.results.3[m, "Training.RMSE"] <- dyn.model.err[1,2]
lag.results.3[m, "Validation.RMSE"] <- dyn.model.err[2,2]
m <- m + 1
}
}
lag.results.3
View(lag.results.3)
saveRDS(lag.results.3, "lagResults3.rds")
top.models.3 <- rbind(lag.results.3 %>%
filter(AICc == min(AICc)),
lag.results.3 %>%
filter(Training.RMSE == min(Training.RMSE)),
lag.results.3 %>%
filter(Validation.RMSE == min(Validation.RMSE)))
summary(lag.results.3[,3:5])
lag.results.3 %>%
filter(lag.results.3[,"Validation.RMSE"] <= 152.9 &
lag.results.3[,"Training.RMSE"] <= 135.6 &
lag.results.3[,"AICc"] <= 1303)
lag.results.3 %>%
filter(lag.results.3[,"Validation.RMSE"] <= 152.9)
best.by.AICc.3 <- lag.results.3 %>%
arrange(AICc) %>%
head(5)
best.by.trainingRMSE.3 <- lag.results.3 %>%
arrange(Training.RMSE) %>%
head(5)
best.by.validationRMSE.3 <- lag.results.3 %>%
arrange(Validation.RMSE) %>%
head(5)
inner_join(best.by.AICc.3, best.by.trainingRMSE.3)
inner_join(best.by.AICc.3, best.by.validationRMSE.3)
inner_join(best.by.trainingRMSE.3, best.by.validationRMSE.3)
top.models.1
top.models.2
top.models.3
xreg.train <- cbind(Quits.lag.train[,"lag24"],
LFPR.lag.train[,"lag24"])
xreg.val <- cbind(Quits.lag.val[,"lag24"],
LFPR.lag.val[,"lag24"])
dyn.reg.5 <- auto.arima(train.ts.3,
xreg = xreg.train,
stepwise = FALSE,
approximation = FALSE)
dyn.reg.5
checkresiduals(dyn.reg.5)
dyn.reg.3
dyn.reg.4
dyn.reg.2
broom::tidy(dyn.reg.4)
class(broom::tidy(dyn.reg.4))
round(broom::tidy(dyn.reg.4), digits = 3)
round(broom::tidy(dyn.reg.4)[,2:3], digits = 3)
